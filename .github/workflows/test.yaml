name: PR Coverage Diff - CI

on: 
  pull_request:

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coverage

      - name: Run tests with coverage
        run: pytest --cov=. --cov-report=xml

      - name: Calculate PR coverage
        run: |
          git fetch origin ${{ github.base_ref }}
          base_commit=$(git merge-base origin/${{ github.base_ref }} HEAD)
          
          # Get list of changed files
          changed_files=$(git diff --name-only $base_commit HEAD | grep '\.py$' || true)
          
          if [ -n "$changed_files" ]; then
            echo "Changed Python files:"
            echo "$changed_files"
            
            # Calculate coverage for changed files
            coverage report --include="$changed_files" > pr_coverage.txt
          else
            echo "No Python files changed in this PR."
            echo "No Python files changed in this PR." > pr_coverage.txt
          fi

      - name: Comment PR
        uses: actions/github-script@v6
        if: always()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')
            const prCoverage = fs.readFileSync('pr_coverage.txt', 'utf8')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## PR Code Coverage Report\n\n```\n' + prCoverage + '\n```'
            })

      - name: Check coverage threshold
        run: |
          if grep -q "TOTAL" pr_coverage.txt; then
            coverage=$(grep "TOTAL" pr_coverage.txt | awk '{print $NF}' | sed 's/%//')
            if (( $(echo "$coverage < 100" | bc -l) )); then
              echo "Coverage threshold not met: $coverage%"
              exit 1
            else
              echo "Coverage threshold met: $coverage%"
            fi
          else
            echo "No coverage data found for changed files."
          fi